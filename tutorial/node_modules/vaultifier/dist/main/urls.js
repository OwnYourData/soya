"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VaultifierUrls = void 0;
// TODO: User should be able to change repo on the fly
class VaultifierUrls {
    constructor(baseUrl = 'https://data-vault.eu', repo) {
        // TODO: re-enable this security barrier
        // don't allow insecure builds for production mode
        // if (process.env.NODE_ENV === 'production' && new URL(baseUrl).protocol !== 'https:')
        //   throw Error('Protocol of baseUrl is not "https".');
        this.baseUrl = baseUrl;
        this.repo = repo;
        this.getPagingParam = (page) => `${(page === null || page === void 0 ? void 0 : page.page) ? `&page=${page.page}` : ''}${(page === null || page === void 0 ? void 0 : page.size) ? `&page_size=${page.size}` : ''}`;
        this.getMultiple = (format, query) => (query === null || query === void 0 ? void 0 : query.schemaDri) ? `${this.baseUrl}/api/data?schema_dri=${query.schemaDri}&f=${format}${this.getPagingParam(query === null || query === void 0 ? void 0 : query.page)}` :
            (query === null || query === void 0 ? void 0 : query.tableId) ? `${this.baseUrl}/api/data?table=${query.tableId}&f=${format}${this.getPagingParam(query === null || query === void 0 ? void 0 : query.page)}`
                : `${this.baseUrl}/api/data?repo_id=${this.repo}&f=${format}${this.getPagingParam(query === null || query === void 0 ? void 0 : query.page)}`;
        this.getMetaItems = (query) => this.getMultiple('meta', query);
        this.getItems = (query) => this.getMultiple('full', query);
        this.getValues = (query) => this.getMultiple('plain', query);
        this.getSingle = (format, query) => query.id
            ? `${this.baseUrl}/api/data/${query.id}?p=id&f=${format}`
            : `${this.baseUrl}/api/data/${query.dri}?p=dri&f=${format}`;
        this.getItem = (query) => this.getSingle('full', query);
        this.getValue = (query) => this.getSingle('plain', query);
        this.getProvis = (query) => this.getSingle('provis', query);
        this.deleteItem = (query) => query.id
            ? `${this.baseUrl}/api/data/${query.id}?p=id`
            : `${this.baseUrl}/api/data/${query.dri}?p=dri`;
        // putting an item uses the same url as deleting an item
        this.putItem = (query) => this.deleteItem(query);
        this.getSchemas = () => `${this.baseUrl}/api/meta/schemas`;
        this.getRelations = (id) => `${this.baseUrl}/api/relation?id=${id}`;
        this.resolveInstallCode = (code) => `${this.baseUrl}/api/install/${code}`;
        this.publicKey = () => 
        // oyd.settings is the default repo for storing the public key
        `${this.baseUrl}/api/repos/${this.repo || 'oyd.settings'}/pub_key`;
        this.getEncryptedPassword = (nonce) => `${this.support}/${nonce}`;
        this.getOAuthAuthorizationCode = (clientId, redirectUri, codeChallenge) => `${this.baseUrl}/oauth/authorize?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}&code_challenge=${codeChallenge}`;
        this.getGenericUrl = (url) => {
            if (!url.startsWith('/'))
                throw new Error('Generic urls must have a leading slash!');
            return `${this.baseUrl}${url}`;
        };
        this.getEidasExternalUrl = (id, token, redirectUrl) => `${this.baseUrl}/api/eidas?id=${id}&token=${token}&redirect_url=${redirectUrl}`;
        this.getOidcSignInUrl = (code, state, redirectUrl, applicationId) => `${this.baseUrl}/signin-oidc?code=${code}&state=${state}&redirect_url=${redirectUrl}&application_id=${applicationId}`;
        this.setRepo = (repo) => this.repo = repo;
        this.token = `${baseUrl}/oauth/token`;
        this.active = `${baseUrl}/api/active`;
        this.support = `${baseUrl}/api/support`;
        this.postValue = `${baseUrl}/api/data`;
        this.postItem = `${baseUrl}/api/data`;
        this.privateKey = `${baseUrl}/api/users/current`;
        this.getRepos = `${baseUrl}/api/repos/index`;
        this.getTables = `${baseUrl}/api/meta/tables`;
        this.usagePolicy = `${baseUrl}/api/meta/usage`;
        this.info = `${baseUrl}/api/meta/info`;
        this.eidasToken = `${this.baseUrl}/api/eidas/token`;
    }
}
exports.VaultifierUrls = VaultifierUrls;
VaultifierUrls.getRedirectUrl = () => {
    const redirectUrl = new URL(window.location.href);
    // remove hash as this could interfere with redirection
    redirectUrl.hash = '';
    let rawUrl = redirectUrl.toString();
    // redirect URLs also must not contain any query parameters
    // as this is not allowed by OAuth
    rawUrl = rawUrl.split('?')[0];
    return rawUrl;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXJscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91cmxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLHNEQUFzRDtBQUN0RCxNQUFhLGNBQWM7SUFhekIsWUFDUyxVQUFrQix1QkFBdUIsRUFDeEMsSUFBYTtRQUVyQix3Q0FBd0M7UUFDeEMsa0RBQWtEO1FBQ2xELHVGQUF1RjtRQUN2Rix3REFBd0Q7UUFOakQsWUFBTyxHQUFQLE9BQU8sQ0FBa0M7UUFDeEMsU0FBSSxHQUFKLElBQUksQ0FBUztRQXFCZixtQkFBYyxHQUFHLENBQUMsSUFBMkIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQyxTQUFTLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUEsSUFBSSxhQUFKLElBQUksdUJBQUosSUFBSSxDQUFFLElBQUksRUFBQyxDQUFDLENBQUMsY0FBYyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBRXBGLGdCQUFXLEdBQUcsQ0FBQyxNQUFjLEVBQUUsS0FBdUIsRUFBRSxFQUFFLENBQ2hFLENBQUEsS0FBSyxhQUFMLEtBQUssdUJBQUwsS0FBSyxDQUFFLFNBQVMsRUFDZCxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyx3QkFBd0IsS0FBSyxDQUFDLFNBQVMsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLGFBQUwsS0FBSyx1QkFBTCxLQUFLLENBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzNHLENBQUEsS0FBSyxhQUFMLEtBQUssdUJBQUwsS0FBSyxDQUFFLE9BQU8sRUFDWixDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxtQkFBbUIsS0FBSyxDQUFDLE9BQU8sTUFBTSxNQUFNLEdBQUcs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