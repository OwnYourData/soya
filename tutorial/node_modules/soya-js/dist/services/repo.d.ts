import { Vaultifier, VaultMinMeta, VaultPostItem } from 'vaultifier/dist/main';
export declare const DEFAULT_REPO = "https://soya.data-container.net";
export declare const DEFAULT_SOYA_NAMESPACE = "https://ns.ownyourdata.eu/ns/soya-context.json";
export interface SoyaQueryResult {
    name: string;
    dri: string;
}
export interface SoyaQuery {
    name?: string;
}
export interface SoyaInfo {
    name: string;
    dri: string;
    history: {
        schema: string;
        date: string;
    }[];
    bases: string[];
    overlays: {
        type: string;
        name: string;
        base: string;
    };
}
export declare class RepoService {
    repo: string;
    constructor(repo?: string);
    private static INSTANCE;
    static getInstance: () => RepoService;
    static initialize: (instance: RepoService) => RepoService;
    getVaultifier: () => Promise<Vaultifier>;
    get: (url: string, usesAuth: boolean) => Promise<any>;
    post: (url: string, usesAuth: boolean, data?: any) => Promise<any>;
    private _pullCache;
    pull: (path: string) => Promise<any>;
    private _push;
    pushValue: (data: any) => Promise<VaultMinMeta>;
    pushItem: (item: VaultPostItem) => Promise<VaultMinMeta>;
    similar: (data: any) => Promise<any>;
    query: (query: SoyaQuery) => Promise<SoyaQueryResult[]>;
    info(path: string[]): Promise<SoyaInfo[]>;
    info(path: string): Promise<SoyaInfo>;
}
