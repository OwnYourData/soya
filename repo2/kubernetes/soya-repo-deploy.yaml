apiVersion: apps/v1
kind: Deployment
metadata:
  name: soya-repo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: soya-repo
  template:
    metadata:
      name: soya-repo
      labels:
        app: soya-repo
    spec:
      containers:
      - name: soya-repo
        image: oydeu/soya-repo:latest
        env:
          - name: LANG
            value: C.UTF-8
          - name: RAILS_LOG_TO_STDOUT
            value: "TRUE"
          - name: LOG_LEVEL
            value: "INFO"
          - name: RAILS_SERVE_STATIC_FILES
            value: "TRUE"
          - name: RAILS_ENV
            value: production
          - name: AUTH
            value: "TRUE"
          - name: DC_DB
            value: kubernetes
          - name: DB2_HOST
            value: postgres
          - name: DB2_NAME
            value: soya-repo
          - name: DB2_USER
            value: postgres
          - name: POSTGRES2_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: superUserPassword
---
kind: Service
apiVersion: v1
metadata:
  name: soya-repo
spec:
  selector:
    app: soya-repo
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: soya-repo
  annotations:
    certmanager.io/issuer: "letsencrypt-prod"
spec:
  ingressClassName: "nginx"
  tls:
  - hosts:
    - soya-beta.ownyourdata.eu
    secretName: signing-demo-tls
  rules:
  - host: soya-beta.ownyourdata.eu
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: soya-repo
            port:
              number: 80
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: soya-repo-tls
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"
spec:
  secretName: soya-repo-tls
  issuerRef:
    group: cert-manager.io
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - 'soya-beta.ownyourdata.eu'
