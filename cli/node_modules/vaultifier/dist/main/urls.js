"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VaultifierUrls = void 0;
// TODO: User should be able to change repo on the fly
class VaultifierUrls {
    constructor(baseUrl = 'https://data-vault.eu', repo) {
        // TODO: re-enable this security barrier
        // don't allow insecure builds for production mode
        // if (process.env.NODE_ENV === 'production' && new URL(baseUrl).protocol !== 'https:')
        //   throw Error('Protocol of baseUrl is not "https".');
        this.baseUrl = baseUrl;
        this.repo = repo;
        this.getPagingParam = (page) => `${(page === null || page === void 0 ? void 0 : page.page) ? `&page=${page.page}` : ''}`;
        this.getMultiple = (format, query) => (query === null || query === void 0 ? void 0 : query.schemaDri) ? `${this.baseUrl}/api/data?schema_dri=${query.schemaDri}&f=${format}${this.getPagingParam(query === null || query === void 0 ? void 0 : query.page)}` :
            (query === null || query === void 0 ? void 0 : query.tableId) ? `${this.baseUrl}/api/data?table=${query.tableId}&f=${format}${this.getPagingParam(query === null || query === void 0 ? void 0 : query.page)}`
                : `${this.baseUrl}/api/data?repo_id=${this.repo}&f=${format}${this.getPagingParam(query === null || query === void 0 ? void 0 : query.page)}`;
        this.getMetaItems = (query) => this.getMultiple('meta', query);
        this.getItems = (query) => this.getMultiple('full', query);
        this.getValues = (query) => this.getMultiple('plain', query);
        this.getSingle = (format, query) => query.id
            ? `${this.baseUrl}/api/data/${query.id}?p=id&f=${format}`
            : `${this.baseUrl}/api/data/${query.dri}?p=dri&f=${format}`;
        this.getItem = (query) => this.getSingle('full', query);
        this.getValue = (query) => this.getSingle('plain', query);
        this.deleteItem = (query) => query.id
            ? `${this.baseUrl}/api/data/${query.id}?p=id`
            : `${this.baseUrl}/api/data/${query.dri}?p=dri`;
        // putting an item uses the same url as deleting an item
        this.putItem = (query) => this.deleteItem(query);
        this.getSchemas = () => `${this.baseUrl}/api/meta/schemas`;
        this.getRelations = (id) => `${this.baseUrl}/api/relation?id=${id}`;
        this.resolveInstallCode = (code) => `${this.baseUrl}/api/install/${code}`;
        this.publicKey = () => 
        // oyd.settings is the default repo for storing the public key
        `${this.baseUrl}/api/repos/${this.repo || 'oyd.settings'}/pub_key`;
        this.getEncryptedPassword = (nonce) => `${this.support}/${nonce}`;
        this.getOAuthAuthorizationCode = (clientId, redirectUri, codeChallenge) => `${this.baseUrl}/oauth/authorize?client_id=${clientId}&response_type=code&redirect_uri=${redirectUri}&code_challenge=${codeChallenge}`;
        this.getGenericUrl = (url) => {
            if (!url.startsWith('/'))
                throw new Error('Generic urls must have a leading slash!');
            return `${this.baseUrl}${url}`;
        };
        this.getEidasExternalUrl = (id, token, redirectUrl) => `${this.baseUrl}/api/eidas?id=${id}&token=${token}&redirect_url=${redirectUrl}`;
        this.setRepo = (repo) => this.repo = repo;
        this.token = `${baseUrl}/oauth/token`;
        this.active = `${baseUrl}/api/active`;
        this.support = `${baseUrl}/api/support`;
        this.postValue = `${baseUrl}/api/data`;
        this.postItem = `${baseUrl}/api/data`;
        this.privateKey = `${baseUrl}/api/users/current`;
        this.getRepos = `${baseUrl}/api/repos/index`;
        this.getTables = `${baseUrl}/api/meta/tables`;
        this.usagePolicy = `${baseUrl}/api/meta/usage`;
        this.info = `${baseUrl}/api/meta/info`;
        this.eidasToken = `${this.baseUrl}/api/eidas/token`;
    }
}
exports.VaultifierUrls = VaultifierUrls;
VaultifierUrls.getRedirectUrl = () => {
    const redirectUrl = new URL(window.location.href);
    // remove hash as this could interfere with redirection
    redirectUrl.hash = '';
    return redirectUrl.toString();
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXJscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91cmxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLHNEQUFzRDtBQUN0RCxNQUFhLGNBQWM7SUFhekIsWUFDUyxVQUFrQix1QkFBdUIsRUFDeEMsSUFBYTtRQUVyQix3Q0FBd0M7UUFDeEMsa0RBQWtEO1FBQ2xELHVGQUF1RjtRQUN2Rix3REFBd0Q7UUFOakQsWUFBTyxHQUFQLE9BQU8sQ0FBa0M7UUFDeEMsU0FBSSxHQUFKLElBQUksQ0FBUztRQXFCZixtQkFBYyxHQUFHLENBQUMsSUFBMkIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsSUFBSSxFQUFDLENBQUMsQ0FBQyxTQUFTLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7UUFFdEMsZ0JBQVcsR0FBRyxDQUFDLE1BQWMsRUFBRSxLQUF1QixFQUFFLEVBQUUsQ0FDaEUsQ0FBQSxLQUFLLGFBQUwsS0FBSyx1QkFBTCxLQUFLLENBQUUsU0FBUyxFQUNkLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLHdCQUF3QixLQUFLLENBQUMsU0FBUyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDM0csQ0FBQSxLQUFLLGFBQUwsS0FBSyx1QkFBTCxLQUFLLENBQUUsT0FBTyxFQUNaLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLG1CQUFtQixLQUFLLENBQUMsT0FBTyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxJQUFJLENBQUMsRUFBRTtnQkFDbEcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8scUJB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