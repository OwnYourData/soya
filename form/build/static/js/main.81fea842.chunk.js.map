{"version":3,"sources":["components/MultiSelect.tsx","components/index.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","width","chips","display","flexWrap","chip","withJsonFormsControlProps","props","classes","id","schema","label","description","handleChange","path","_props$data","data","getItems","useCallback","items","enum","oneOf","map","x","_x$title","_x$const","text","title","value","const","_jsxs","FormControl","className","children","_jsx","InputLabel","Select","multiple","onChange","event","target","input","Input","renderValue","selected","val","_ref","find","Chip","MenuProps","getContentAnchorEl","_ref2","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","FormHelperText","undefined","customRenderers","tester","rankWith","and","schemaTypeIs","or","isOneOfControl","isEnumControl","isOneOfEnumControl","renderer","MultiSelect","console","log","packageJson","name","version","allRenderers","concat","_toConsumableArray","materialRenderers","postMessage","window","parent","postData","debounce","postUpdate","minWidth","App","_useState","useState","_useState2","_slicedToArray","isInitialized","setIsInitialized","_useState3","_useState4","schemaDri","setSchemaDri","_useState5","_useState6","schemaList","setSchemaList","_useState7","_useState8","tag","setTag","_useState9","_useState10","language","setLanguage","_useState11","_useState12","viewMode","setViewMode","isEmbedded","_useState13","_useState14","form","setForm","_useState15","_useState16","setData","_useState17","_useState18","textData","setTextData","_useState19","_useState20","isLoading","setIsLoading","fetchForm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","soya","formOptions","soyaForm","wrap","_context","prev","next","Soya","t0","pull","t1","sent","t2","getForm","call","t3","stop","sendUpdate","type","documentHeight","document","documentElement","scrollHeight","fetchSchemas","_callee2","_context2","query","useEffect","_callee3","_context3","_searchParams$get","_searchParams$get2","_searchParams$get3","_searchParams$get4","searchParams","URL","location","href","get","JSON","parse","decodeURIComponent","_unused2","handleClick","addEventListener","removeEventListener","handleMessage","evt","_evt$data","source","newData","stringify","permalink","set","header1","TextField","onKeyUp","key","length","Button","variant","color","onClick","List","component","ListItem","button","dri","withEmpty","values","distinct","filter","idx","tagOptions","options","languageOptions","header2","_ref4","_ref5","content","CircularProgress","JsonForms","uischema","ui","renderers","cells","materialCells","footer1","_Fragment","Card","CardContent","TextArea","style","e","_unused3","toString","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.81fea842.chunk.js","sourcesContent":["import { ControlProps } from '@jsonforms/core';\nimport { withJsonFormsControlProps } from '@jsonforms/react';\n\nimport { FormControl, InputLabel, Select, MenuItem, Chip, Input, FormHelperText, Checkbox, ListItemText } from '@material-ui/core';\nimport { useCallback } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface SelectItem {\n  value: string;\n  text: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: '100%',\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n}));\n\nconst MultiSelect = (props: ControlProps) => {\n  const classes = useStyles();\n\n  let {\n    id,\n    schema,\n    label,\n    description,\n    handleChange,\n    path,\n    data = [],\n  } = props;\n\n  const getItems = useCallback((): SelectItem[] => {\n    // support both `enum` and `oneOf`\n    const items: any[] | undefined = schema.enum || schema.oneOf;\n\n    if (!items)\n      return [];\n\n    return items.map(x => ({\n      text: x.title ?? x,\n      value: x.const ?? x,\n    }));\n\n    // TODO: re-enable sorting once it's specified how to correctly sort the items\n    // return sort(items, x => x.title ?? x).map(x => ({\n    //   text: x.title ?? x,\n    //   value: x.const ?? x,\n    // }));\n  }, [schema.enum, schema.oneOf]);\n\n  const items = getItems();\n\n  return <FormControl\n    id={id}\n    className={classes.formControl}>\n    <InputLabel >{label}</InputLabel>\n    <Select\n      multiple\n      value={data}\n      onChange={(event) => {\n        handleChange(path, event.target.value);\n      }}\n      input={<Input id=\"select-multiple-chip\" />}\n      renderValue={(selected) => (\n        <div className={classes.chips}>\n          {(selected as string[]).map((val) => {\n            const { value, text } = items.find(x => x.value === val) as SelectItem;\n            return <Chip key={value} label={text} className={classes.chip} />\n          })}\n        </div>\n      )}\n      MenuProps={{\n        // https://stackoverflow.com/a/59790471/1517969\n        getContentAnchorEl: null,\n      }}\n    >\n      {items.map(({ value, text }) => (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={data.indexOf(value) !== -1} />\n          <ListItemText primary={text} />\n        </MenuItem>\n      ))}\n    </Select>\n    {description ? <FormHelperText>{description}</FormHelperText> : undefined}\n  </FormControl>;\n}\n\nexport default withJsonFormsControlProps(MultiSelect);","import { isEnumControl, isOneOfControl, isOneOfEnumControl, and, or, rankWith, schemaTypeIs } from '@jsonforms/core';\nimport MultiSelect from './MultiSelect';\n\nexport const customRenderers = [\n  {\n    tester: rankWith(\n      20,\n      and(schemaTypeIs('array'), or(isOneOfControl, isEnumControl, isOneOfEnumControl)),\n    ), renderer: MultiSelect\n  },\n];","import React, { useCallback, useEffect, useState } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport {\n  materialRenderers,\n  materialCells,\n} from '@jsonforms/material-renderers';\nimport { Soya, SoyaFormResponse, SoyaFormOptions, SoyaQueryResult } from 'soya-js'\nimport './App.css';\nimport { customRenderers } from './components';\nimport packageJson from '../package.json';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  InputLabel,\n  MenuItem,\n  Select,\n  FormControl,\n  CircularProgress,\n  Button,\n  TextField,\n  Card,\n  CardContent,\n  TextareaAutosize as TextArea,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core';\nimport { debounce } from 'debounce';\n\n// print version to browser console\nconsole.log(packageJson.name, packageJson.version);\n\nconst allRenderers = [\n  ...customRenderers,\n  ...materialRenderers,\n];\n\nconst postMessage = (data: any | (() => any)) => {\n  if (window.parent) {\n    // if necessary, execute function\n    if (typeof data === 'function')\n      data = data();\n\n    window.parent.postMessage(data, '*');\n    // setTimeout with 0 to inform the parent window\n    // always after the last window repaint\n  }\n}\nconst postData = debounce((data: any) => { postMessage(data) }, 250);\nconst postUpdate = debounce((data: any) => { postMessage(data) }, 400);\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const [isInitialized, setIsInitialized] = useState<boolean>(false);\n\n  const [schemaDri, setSchemaDri] = useState<string>('');\n  const [schemaList, setSchemaList] = useState<SoyaQueryResult[]>([]);\n  const [tag, setTag] = useState<string>('');\n  const [language, setLanguage] = useState<string>('');\n  const [viewMode, setViewMode] = useState<string>('');\n\n  const isEmbedded = viewMode === 'embedded';\n\n  const [form, setForm] = useState<SoyaFormResponse | undefined>(undefined);\n  const [data, setData] = useState<any>({});\n  const [textData, setTextData] = useState<string>('');\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const fetchForm = useCallback(async () => {\n    if (schemaDri) {\n      setIsLoading(true);\n\n      try {\n        const soya = new Soya();\n        const formOptions: SoyaFormOptions | undefined = {\n          // if language is nullish, just pass undefined\n          language: language || undefined,\n          // if tag is nullish, just pass undefined\n          tag: tag || undefined,\n        };\n\n        const soyaForm = await soya.getForm(await soya.pull(schemaDri), formOptions);\n\n        setForm(soyaForm);\n      } catch { }\n\n      setIsLoading(false);\n    }\n  }, [schemaDri, language, tag]);\n\n  const sendUpdate = useCallback(() => {\n    postUpdate({\n      type: 'update',\n      isInitialized,\n      documentHeight: document.documentElement.scrollHeight,\n    });\n  }, [isInitialized]);\n\n  const fetchSchemas = useCallback(() => {\n    (async () => {\n      setSchemaList(await new Soya().query({ name: schemaDri }));\n    })();\n  }, [schemaDri]);\n\n  // initialization of the app\n  useEffect(() => {\n    if (isInitialized)\n      return;\n\n    (async () => {\n      await fetchForm();\n      setIsInitialized(true);\n    })();\n  }, [setIsInitialized, isInitialized, fetchForm]);\n\n  useEffect(() => {\n    fetchForm();\n    // this dependency array is correct!\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tag, language]);\n\n  useEffect(() => {\n    const { searchParams } = new URL(window.location.href);\n\n    const data = searchParams.get('data');\n    if (data)\n      try {\n        setData(JSON.parse(decodeURIComponent(data)));\n      } catch { }\n\n    setSchemaDri(searchParams.get('schemaDri') ?? '');\n    setTag(searchParams.get('tag') ?? '');\n    setLanguage(searchParams.get('language') ?? '');\n    setViewMode(searchParams.get('viewMode') ?? '');\n  }, []);\n\n  useEffect(() => {\n    const handleClick = () => {\n      sendUpdate();\n    }\n\n    window.addEventListener('click', handleClick);\n    return () => window.removeEventListener('click', handleClick);\n  }, [sendUpdate]);\n\n  useEffect(() => {\n    const handleMessage = (evt: MessageEvent) => {\n      // ignore all messages that are created from this window\n      if (evt.source === window)\n        return;\n\n      switch (evt.data?.type) {\n        case 'data':\n          const { data: newData } = evt.data;\n          // only set data, if it differs to our internal data\n          // this is important to avoid nasty infinite loops\n          if (JSON.stringify(newData) !== JSON.stringify(data))\n            setData(newData);\n          break;\n      }\n    }\n\n    // parent apps can also update data via message\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [data]);\n\n  const permalink = new URL(window.location.href);\n  const { searchParams } = permalink;\n  if (schemaDri)\n    searchParams.set('schemaDri', schemaDri);\n  if (tag)\n    searchParams.set('tag', tag);\n  if (language)\n    searchParams.set('language', language);\n  if (data)\n    searchParams.set('data', JSON.stringify(data));\n\n  let header1: JSX.Element | undefined = undefined;\n  if (!isEmbedded)\n    header1 = <div>\n      <div>\n        <TextField\n          label=\"SOyA Schema DRI\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            setSchemaDri(event.target.value);\n          }}\n          // FIXME: This onKeyUp is ugly and should be achieved by a form submit\n          onKeyUp={(evt) => {\n            if (evt.key === 'Enter')\n              fetchForm();\n            else if (schemaDri.length >= 3)\n              fetchSchemas();\n            else\n              setSchemaList([]);\n          }}\n          value={schemaDri}\n        />\n        <Button className=\"Button\" variant=\"contained\" color=\"primary\" onClick={() => fetchForm()}>Load Form</Button>\n      </div>\n      <List component=\"nav\" >\n        {schemaList.map((x) => (\n          <ListItem button key={`${x.dri}-${x.name}`} onClick={() => {\n            setSchemaDri(x.name);\n            setSchemaList([]);\n          }}>\n            <ListItemText primary={x.name} />\n          </ListItem>\n        ))}\n      </List>\n    </div>;\n\n  const withEmpty = (values: (string | undefined)[] | undefined) => {\n    if (!values)\n      return undefined;\n\n    const distinct = (values.filter((x, idx) => !!x && values.indexOf(x) === idx) as string[])\n\n    return [\n      { value: '', text: 'Default' },\n      ...distinct.map((x: string) => ({\n        value: x,\n        text: x,\n      })),\n    ];\n  }\n\n  const tagOptions = withEmpty(form?.options.map(x => x.tag));\n  const languageOptions = withEmpty(form?.options.map(x => x.language));\n\n  let header2: JSX.Element | undefined = undefined;\n  if (!isLoading)\n    header2 = <div>\n      {tagOptions ? <FormControl className={classes.formControl}>\n        <InputLabel>Tag</InputLabel>\n        <Select\n          value={tag}\n          label=\"Tag\"\n          onChange={(event) => {\n            setTag(event.target.value as string);\n          }}\n        >\n          {tagOptions.map(({ value, text }) => <MenuItem key={`tag-${value}`} value={value}>{text}</MenuItem>)}\n        </Select></FormControl> : undefined}\n      {languageOptions ? <FormControl className={classes.formControl}>\n        <InputLabel>Language</InputLabel>\n        <Select\n          value={language}\n          label=\"Language\"\n          onChange={(event) => {\n            setLanguage(event.target.value as string);\n          }}\n        >\n          {languageOptions.map(({ value, text }) => <MenuItem key={`tag-${value}`} value={value}>{text}</MenuItem>)}\n        </Select></FormControl> : undefined}\n    </div>;\n\n  let content: JSX.Element | undefined = undefined;\n  if (isLoading || !isInitialized)\n    content = <div><CircularProgress /></div>;\n  else if (form)\n    content = <JsonForms\n      schema={form.schema}\n      uischema={form.ui}\n      data={data}\n      renderers={allRenderers}\n      cells={materialCells}\n      onChange={(evt) => {\n        const { data } = evt;\n        setData(data);\n        setTextData(JSON.stringify(data, null, 2));\n        postData({ type: 'data', evt });\n      }}\n    />;\n\n  let footer1: JSX.Element | undefined = undefined;\n  if (!isLoading && !isEmbedded)\n    footer1 = <>\n      <h2>Data</h2>\n      <Card>\n        <CardContent>\n          <TextArea\n            value={textData}\n            style={{ 'width': '100%' }}\n            onChange={(e) => {\n              const text = e.target.value;\n              setTextData(text);\n\n              try {\n                const data = JSON.parse(text);\n                setData(data);\n              } catch { }\n            }} />\n        </CardContent>\n      </Card>\n      <h2>Permalink</h2>\n      <Card>\n        <CardContent>\n          {permalink.toString()}\n        </CardContent>\n      </Card>\n    </>;\n\n  // we use a function here as we want to the function\n  // right before posting the message\n  // this way we also catch layout/height changes\n  // as every postMessage is executed with a setTimeout(0)\n  sendUpdate();\n\n  return (\n    <div className={isEmbedded ? '' : 'App'}>\n      {isInitialized ? (isEmbedded ? undefined : <h1>OwnYourData SOyA-Forms</h1>) : undefined}\n      {isInitialized ? header1 : undefined}\n      {isInitialized ? header2 : undefined}\n      {content}\n      {isInitialized ? footer1 : undefined}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement,\n);"],"sourceRoot":""}